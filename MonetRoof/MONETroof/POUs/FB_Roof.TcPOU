<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_Roof" Id="{522d8680-feaf-4d00-ac9f-47554bf0503b}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Roof
VAR_INPUT
	max_speed				: INT;
	acceleration			: UINT;
	min_position			: INT;
	max_position			: INT;	
	max_position_diff		: INT;
	comm					: I_Comm;
	reset_roof				: BOOL;
END_VAR
VAR_OUTPUT
	sync_error				: BOOL;
	direction_error			: BOOL;
	drive_error				: BOOL;
	state					: E_RoofState;	
	percent_open			: REAL;	
END_VAR
VAR
	// commands for roofs
	open_roof		AT%I*	: BOOL;
	close_roof		AT%I*	: BOOL;
	stop_roof				: BOOL;	
	
	motors			: ARRAY[1..2] OF FB_RoofMotor;
	i				: INT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// call motors
drive_error := FALSE;
percent_open := 1.0;
FOR i := 1 TO 2 DO
	motors[i](
		max_speed := max_speed, 
		acceleration := acceleration, 
		min_position := min_position, 
		max_position := max_position,
		comm := comm);
		
	// check errors
	IF motors[i].error THEN
		drive_error := TRUE;
	END_IF
	
	// open percentage
	percent_open := percent_open * motors[i].percent_open / 100.0;
END_FOR

// consistency check
direction_error := motors[1].moving AND motors[2].moving AND (motors[1].real_speed * motors[2].real_speed < 0);
sync_error := ABS(motors[1].position - motors[2].position) >= max_position_diff;

// stop on error
IF direction_error OR sync_error OR drive_error THEN
	Stop();
END_IF

// set state
IF direction_error OR sync_error OR drive_error THEN
	state := E_RoofState.error;
ELSE
	// no current error, but if we're still in error state, only proceed, if reset_roof is set
	IF state <> E_RoofState.error OR reset_roof THEN
		reset_roof := FALSE; 	

		// check other states
		IF motors[1].moving OR motors[2].moving THEN
			IF motors[1].direction_open OR motors[2].direction_open THEN
				state := E_RoofState.opening;
			ELSIF motors[1].direction_close OR motors[2].direction_close THEN
				state := E_RoofState.closing;
			ELSE
				; // error
			END_IF
		ELSIF motors[1].opened AND motors[2].opened THEN
			state := E_RoofState.opened;
		ELSIF motors[1].closed AND motors[2].closed THEN
			state := E_RoofState.closed;
		ELSIF NOT motors[1].moving AND NOT motors[2].moving THEN
			state := E_RoofState.stopped;
		ELSE
			state := E_RoofState.error;	
		END_IF
	END_IF
END_IF	]]></ST>
    </Implementation>
    <Method Name="Automatic" Id="{dacfaaa5-2d6d-4b81-9dd2-47909b36b0e8}">
      <Declaration><![CDATA[METHOD Automatic : BOOL
VAR_INPUT
	open_roof	: BOOL;
	close_roof	: BOOL;
	stop_roof	: BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// automatic commands 
IF open_roof THEN
	Open();
ELSIF close_roof THEN
	Close();
ELSIF stop_roof THEN
	SoftStop();
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Close" Id="{61d8273a-3637-4f75-891a-a676fd1df1ef}">
      <Declaration><![CDATA[METHOD Close : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i := 1 TO 2 DO
	motors[i].Close();
END_FOR;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Manual" Id="{8fd29956-6c66-4ec0-a43c-09228543d9c5}">
      <Declaration><![CDATA[METHOD Manual : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// manual commands commands
IF open_roof THEN
	Open();
ELSIF close_roof THEN
	Close();
ELSE
	SoftStop();
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Open" Id="{a996c996-0ed0-4e45-8297-c49f0ce9e4f1}">
      <Declaration><![CDATA[METHOD Open : BOOL
VAR_INPUT
END_VAR
VAR
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i := 1 TO 2 DO
	motors[i].Open();
END_FOR;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Reset" Id="{ceb23464-50f6-4143-8996-d8b438d9b575}">
      <Declaration><![CDATA[METHOD Reset : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[reset_roof := TRUE;
FOR i := 1 TO 2 DO
	motors[i].Reset();
END_FOR;]]></ST>
      </Implementation>
    </Method>
    <Method Name="SoftStop" Id="{ae8d7a4a-b701-4693-902f-f1904e5a7ece}">
      <Declaration><![CDATA[METHOD SoftStop : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i := 1 TO 2 DO
	motors[i].SoftStop();
END_FOR;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Stop" Id="{1f32f30b-7d83-4389-9405-dd9528b72d8a}">
      <Declaration><![CDATA[METHOD Stop : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i := 1 TO 2 DO
	motors[i].Stop();
END_FOR;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_Roof">
      <LineId Id="125" Count="0" />
      <LineId Id="211" Count="0" />
      <LineId Id="216" Count="0" />
      <LineId Id="126" Count="1" />
      <LineId Id="181" Count="3" />
      <LineId Id="209" Count="0" />
      <LineId Id="217" Count="1" />
      <LineId Id="214" Count="0" />
      <LineId Id="213" Count="0" />
      <LineId Id="212" Count="0" />
      <LineId Id="219" Count="2" />
      <LineId Id="128" Count="3" />
      <LineId Id="133" Count="4" />
      <LineId Id="139" Count="4" />
      <LineId Id="229" Count="0" />
      <LineId Id="231" Count="0" />
      <LineId Id="230" Count="0" />
      <LineId Id="232" Count="0" />
      <LineId Id="228" Count="0" />
      <LineId Id="224" Count="0" />
      <LineId Id="144" Count="15" />
      <LineId Id="32" Count="0" />
      <LineId Id="233" Count="0" />
      <LineId Id="226" Count="0" />
    </LineIds>
    <LineIds Name="FB_Roof.Automatic">
      <LineId Id="9" Count="4" />
      <LineId Id="16" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Roof.Close">
      <LineId Id="6" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Roof.Manual">
      <LineId Id="6" Count="4" />
      <LineId Id="14" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Roof.Open">
      <LineId Id="6" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Roof.Reset">
      <LineId Id="8" Count="0" />
      <LineId Id="6" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Roof.SoftStop">
      <LineId Id="11" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Roof.Stop">
      <LineId Id="6" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>